* {
    padding: 0;
    margin: 0;
    user-select: none;
}

#topBar {
    padding: 2em;
}

canvas {
    background: #eee;
    display: block;
    margin: auto;
    transition: opacity 1s;
}

#gameOverlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
}

.container {
    position: relative;
    font-weight: bold;
    height: 100%;
    width: 100%;
    margin: auto;
}

.container .center {
    position: relative;
    width: inherit;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    padding-top: 25vh;
    padding-bottom: 25vh;
    font-size: calc((5vh + 5vw) / 2);
}

@keyframes button {
    0% { transform: scale(1, 1) }
    50% { transform: scale(0.85,0.85) }
    100% { transform: scale(1,1) }
}

.container #loading {
    opacity: 1;
    margin: 0 auto;
    transition: opacity 2s;
    width: 1em;
}

.container #banner {
    visibility: hidden;
    opacity: 0;
    flex: auto;
    padding: 0.5em;
    border-radius: 100px;
    text-align: center;
    transition: opacity 1s;
}

.container #button {
    visibility: hidden;
    opacity: 0;
    flex: auto;
    margin: 0 auto;
    padding: 1vh 1.5em;
    border: 5px solid;
    background-color: rgba(255, 255, 255, 0.3);
    border-radius: 100px;
    text-align: center;
    cursor: pointer;
    animation: button 2s ease-in-out infinite;
    transition: opacity 1s, background-color 0.5s;
}

.container #button:hover {
    background-color: rgba(255, 255, 255,0.5);
}

/*
    fix for safari:
    event is intercepted from bubbling up
    for updated elements. see setButton methods in overlay.js
*/
.container #buttonspan {
    pointer-events: none;
}

.container #instructions {
    visibility: hidden;
    opacity: 0;
    flex: auto;
    padding: 1em;
    font-size: 0.5em;
    border-radius: 100px;
    text-align: center;
    transition: opacity 1s;
}

.container #score {
    visibility: hidden;
    opacity: 0;
    position: absolute;
    margin: 0.5em;
    top: 0;
    left: 0;
    transition: opacity 3s;
    font-size: 1.25em;
}

.container #lives {
    visibility: hidden;
    opacity: 0;
    position: absolute;
    margin: 0.5em;
    top: 1em;
    left: 0;
    transition: opacity 3s;
    font-size: 1.25em;
}

.container #mute {
    visibility: hidden;
    opacity: 0;
    position: absolute;
    top: 0;
    right: 0;
    margin: 0.5em;
    padding: 0.2em;
    width: 1em;
    height: 1em;
    text-align: center;
    border: 3px solid;
    border-radius: 100%;
    cursor: pointer;
    transition: opacity 3s;
    font-size: 1.5em;
}

.container #pause {
    visibility: hidden;
    opacity: 0;
    position: absolute;
    top: 0em;
    right: 2em;
    margin: 0.5em;
    padding: 0.2em;
    width: 1em;
    height: 1em;
    text-align: center;
    border: 3px solid;
    border-radius: 100%;
    cursor: pointer;
    transition: opacity 3s;
    font-size: 1.5em;
}

#loading {
    position: absolute;
    width: 60%;
    height: 60%;
    top: calc(35% - 15px);
    left: calc(50% - 15px);
    opacity: 1;
    transition: opacity 2s;
}

/*!
 * Load Awesome v1.1.0 (http://github.danielcardoso.net/load-awesome/)
 * Copyright 2015 Daniel Cardoso <@DanielCardoso>
 * Licensed under MIT
 */

.la-ball-clip-rotate,
.la-ball-clip-rotate>div {
    position: relative;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

.la-ball-clip-rotate {
    display: block;
}

.la-ball-clip-rotate.la-dark {
    color: #fff;
}

.la-ball-clip-rotate>div {
    display: inline-block;
    float: none;
    background-color: currentColor;
    border: 0 solid currentColor;
}

.la-ball-clip-rotate {
    position: relative;
    width: 96px;
    height: 96px;
}

.la-ball-clip-rotate>div {
    position: absolute;
    width: 96px;
    height: 96px;
    top: -24px;
    left: -24px;
    background: transparent;
    border-width: 4px;
    border-bottom-color: transparent;
    border-radius: 100%;
    -webkit-animation: ball-clip-rotate .75s linear infinite;
    -moz-animation: ball-clip-rotate .75s linear infinite;
    -o-animation: ball-clip-rotate .75s linear infinite;
    animation: ball-clip-rotate .75s linear infinite;
}

.la-ball-clip-rotate>span {
    display: block;
    margin: 12px auto;
    font-size: 18px;
    background: transparent;
}


/*
  * Animation
*/

@-webkit-keyframes ball-clip-rotate {
    0% {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
    }
    50% {
        -webkit-transform: rotate(180deg);
        transform: rotate(180deg);
    }
    100% {
        -webkit-transform: rotate(360deg);
        transform: rotate(360deg);
    }
}

@-moz-keyframes ball-clip-rotate {
    0% {
        -moz-transform: rotate(0deg);
        transform: rotate(0deg);
    }
    50% {
        -moz-transform: rotate(180deg);
        transform: rotate(180deg);
    }
    100% {
        -moz-transform: rotate(360deg);
        transform: rotate(360deg);
    }
}

@-o-keyframes ball-clip-rotate {
    0% {
        -o-transform: rotate(0deg);
        transform: rotate(0deg);
    }
    50% {
        -o-transform: rotate(180deg);
        transform: rotate(180deg);
    }
    100% {
        -o-transform: rotate(360deg);
        transform: rotate(360deg);
    }
}

@keyframes ball-clip-rotate {
    0% {
        -webkit-transform: rotate(0deg);
        -moz-transform: rotate(0deg);
        -o-transform: rotate(0deg);
        transform: rotate(0deg);
    }
    50% {
        -webkit-transform: rotate(180deg);
        -moz-transform: rotate(180deg);
        -o-transform: rotate(180deg);
        transform: rotate(180deg);
    }
    100% {
        -webkit-transform: rotate(360deg);
        -moz-transform: rotate(360deg);
        -o-transform: rotate(360deg);
        transform: rotate(360deg);
    }
}